{"version":3,"sources":["components/BuyPage/CartCard.jsx","components/BuyPage/Cart.jsx","components/utils/Toast.jsx","components/BuyPage/BuyPage.jsx","components/ProductsPage/ProductCard.jsx","components/ProductsPage/ProductsPage.jsx","components/Main.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","margin","backgroundColor","display","borderRadius","cardBody","marginLeft","padding","width","media","maxWidth","CartCard","cartItem","classes","id","src","photographer","height","cost","Card","className","CardMedia","component","image","small","CardContent","Typography","variant","info","infoData","color","appBar","justifyContent","button","Cart","cart","handleBuy","useState","totalCost","setTotalCost","useEffect","reduce","item","Container","map","cartInfo","Box","m","Button","onClick","endIcon","title","Toast","show","setShow","severity","message","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","event","reason","console","log","open","BuyPage","onBuyItems","p","AppBar","position","Toolbar","Badge","badgeContent","length","by","fontSize","float","textDecoration","marginTop","ProductCard","photoInfo","AddItem","photographer_url","url","elevation","medium","href","CardActions","style","size","target","minWidth","Products","onAddItem","includes","flexWrap","data","Main","setCart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d8dcb76.chunk.js","sourcesContent":["import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"auto 0\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n    display: \"flex\",\r\n    borderRadius: 16,\r\n  },\r\n  cardBody: {\r\n    margin: 8,\r\n    marginLeft: 12,\r\n    padding: 8,\r\n    borderRadius: \"0 16px 16px 0\",\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n  },\r\n  media: {\r\n    maxWidth: 200,\r\n  },\r\n});\r\n\r\nconst CartCard = ({ cartItem }) => {\r\n  const classes = useStyles();\r\n\r\n  const { id, src, photographer, width, height, cost } = cartItem;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia component=\"img\" className={classes.media} image={src.small} />\r\n      <CardContent className={classes.cardBody}>\r\n        <Typography component=\"h1\" variant=\"h6\" className={classes.info}>\r\n          Picture by {photographer}\r\n        </Typography>\r\n\r\n        <Typography\r\n          variant=\"body1\"\r\n          className={classes.infoData}\r\n          color=\"textSecondary\"\r\n        >\r\n          id: #{id}\r\n          <br />\r\n          Original Resolution: {width}x{height}\r\n          <br />\r\n          Cost: ₹ {cost}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CartCard;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CartCard from \"./CartCard\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ShoppingCart from \"@material-ui/icons/ShoppingCart\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: \"8px\",\r\n    margin: \"8px\",\r\n    color: \"white\",\r\n  },\r\n  appBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    color: \"black\",\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst Cart = ({ cart, handleBuy }) => {\r\n  const classes = useStyles();\r\n\r\n  // State to keep track of the total cost.\r\n  const [totalCost, setTotalCost] = useState(0);\r\n\r\n  // totalCost to get the total Cost of the items in the cart.\r\n  // Run it each time the value of cart Updates.\r\n  useEffect(() => {\r\n    setTotalCost(cart.reduce((totalCost, item) => totalCost + item.cost, 0));\r\n  }, [cart]);\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {cart.map((cartInfo) => (\r\n        <Box m={1} key={cartInfo.id}>\r\n          <CartCard cartItem={cartInfo} />\r\n        </Box>\r\n      ))}\r\n\r\n      {/* Only Show if the totalCost is not 0 */}\r\n      {totalCost ? (\r\n        <Box m={2} display=\"flex\" justifyContent=\"space-between\">\r\n          <Button\r\n            onClick={handleBuy}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            className={classes.button}\r\n            endIcon={<ShoppingCart />}\r\n            title=\"Buy Items\"\r\n          >\r\n            Buy Items\r\n          </Button>\r\n\r\n          <Typography variant=\"h6\">Total Cost: ₹ {totalCost}</Typography>\r\n        </Box>\r\n      ) : null}\r\n\r\n      {/* <pre>{JSON.stringify(cart, null, 2)}</pre> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\n// Custom Toast Bar\r\nconst Toast = ({ show, setShow, severity, message }) => (\r\n  <Snackbar\r\n    autoHideDuration={3000}\r\n    anchorOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"right\",\r\n    }}\r\n    onClose={(event, reason) => {\r\n      event && console.log(\"Toast\");\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n      setShow(false);\r\n    }}\r\n    open={show}\r\n  >\r\n    <MuiAlert severity={severity} variant=\"filled\">\r\n      {message}\r\n    </MuiAlert>\r\n  </Snackbar>\r\n);\r\n\r\nexport default Toast;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Cart from \"./Cart\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Toast from \"../utils/Toast\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  appBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nconst BuyPage = ({ cart, onBuyItems }) => {\r\n  const classes = useStyles();\r\n\r\n  // State to show/hide the toast.\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleBuy = () => {\r\n    // Don't call the function if Cart is EMPTY.\r\n    // This prevents some unnecessary reders.\r\n    if (cart.length !== 0) {\r\n      onBuyItems();\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box m={1} p={1}>\r\n        <AppBar position=\"relative\" color=\"inherit\">\r\n          <Toolbar className={classes.appBar}>\r\n            <Typography>Mocking Buy Page</Typography>\r\n            <Typography>\r\n              <Badge badgeContent={cart.length} color=\"error\">\r\n                <ShoppingCartIcon />\r\n              </Badge>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n\r\n      <Cart cart={cart} handleBuy={handleBuy} />\r\n\r\n      <Toast\r\n        show={show}\r\n        setShow={setShow}\r\n        severity=\"success\"\r\n        message=\"Order Placed Successfully\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BuyPage;\r\n","import AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//  Define the styles for the Card.\r\n//  Took a while, I think its worth it. 😬\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 350,\r\n    margin: \"auto 0\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n    color: \"white\",\r\n  },\r\n  media: {\r\n    borderRadius: \"8px\",\r\n  },\r\n  cardBody: {\r\n    borderRadius: \"8px\",\r\n  },\r\n  by: {\r\n    color: \"white\",\r\n    fontSize: \"13px\",\r\n    padding: \"8px 8px 0 0\",\r\n    float: \"right\",\r\n    textDecoration: \"none\",\r\n  },\r\n  info: {\r\n    padding: \"8px\",\r\n    marginTop: \"16px\",\r\n  },\r\n  infoData: {\r\n    padding: \"8px\",\r\n    color: \"rgb(255 255 255 / 0.8)\",\r\n  },\r\n  button: {\r\n    \"backgroundColor\": \"rgba(255, 255, 255, 1)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 1)\",\r\n      color: \"black\",\r\n    },\r\n    \"textTransform\": \"none\",\r\n  },\r\n});\r\n\r\nconst ProductCard = ({ photoInfo, AddItem }) => {\r\n  const classes = useStyles();\r\n\r\n  // Destructure data to display.\r\n  const {\r\n    id,\r\n    photographer,\r\n    photographer_url,\r\n    src,\r\n    width,\r\n    height,\r\n    url,\r\n    cost,\r\n  } = photoInfo;\r\n\r\n  return (\r\n    <Card className={classes.root} elevation={8}>\r\n      <CardContent className={classes.cardBody}>\r\n        {/* Image of the Card */}\r\n        <CardMedia\r\n          component=\"img\"\r\n          className={classes.media}\r\n          image={src.medium}\r\n        />\r\n        {/* Text of the Card */}\r\n        <Typography\r\n          className={classes.by}\r\n          component=\"a\"\r\n          href={photographer_url}\r\n        >\r\n          by {photographer}\r\n        </Typography>\r\n\r\n        <Typography component=\"h1\" variant=\"h6\" className={classes.info}>\r\n          More Info\r\n        </Typography>\r\n\r\n        <Typography\r\n          variant=\"body1\"\r\n          className={classes.infoData}\r\n          color=\"textSecondary\"\r\n        >\r\n          id: #{id}\r\n          <br />\r\n          Original Resolution: {width}x{height}\r\n        </Typography>\r\n\r\n        {/* Buttons calling to action */}\r\n        <CardActions style={{ justifyContent: \"space-evenly\" }}>\r\n          <Button\r\n            className={classes.button}\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              AddItem(photoInfo);\r\n            }}\r\n            variant=\"outlined\"\r\n            endIcon={<AddShoppingCartIcon />}\r\n          >\r\n            Cost: ₹{cost}\r\n          </Button>\r\n          <Button\r\n            className={classes.button}\r\n            size=\"medium\"\r\n            target=\"_black\"\r\n            href={url}\r\n            variant=\"outlined\"\r\n            endIcon={<OpenInNewIcon />}\r\n          >\r\n            See Original\r\n          </Button>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport Toast from \"../utils/Toast\";\r\nimport data from \"../utils/data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 800,\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n});\r\n\r\nconst Products = ({ cart, onAddItem }) => {\r\n  const classes = useStyles();\r\n\r\n  // State to show/hide the toast.\r\n  const [show, setShow] = useState(false);\r\n\r\n  const AddItem = (item) => {\r\n    // Logic to check if the item already exists.\r\n    if (cart.includes(item)) {\r\n      // If Item is already present then show a Toast.\r\n      setShow(true);\r\n    } else {\r\n      // Else call the onAddItem function.\r\n      onAddItem(item);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Box flexWrap=\"wrap\" display=\"flex\" p={1} m={1}>\r\n        {data.map((photoInfo) => (\r\n          <Box key={photoInfo.id} p={1} m={1}>\r\n            <ProductCard photoInfo={photoInfo} AddItem={AddItem} />\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n\r\n      <Toast\r\n        show={show}\r\n        setShow={setShow}\r\n        severity=\"error\"\r\n        message=\"Item already present!\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { Fragment, useState } from \"react\";\r\n\r\nimport BuyPage from \"./BuyPage/BuyPage\";\r\nimport Products from \"./ProductsPage/ProductsPage\";\r\n\r\nconst Main = () => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // AddItem function to handle Add Item Event.\r\n  // Takes the item to be added as a parameter.\r\n  const AddItem = (item) => {\r\n    setCart([...cart, item]);\r\n  };\r\n\r\n  // BuyItems function to clear out the cart.\r\n  // Mocking to buy the Items in the cart.\r\n  const BuyItems = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Products cart={cart} onAddItem={AddItem} />\r\n      <BuyPage cart={cart} onBuyItems={BuyItems} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport Main from \"./components/Main\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}